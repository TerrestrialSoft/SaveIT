<div>
    <EditForm Model="_model" OnValidSubmit="DownloadSaveAsync">
        <FluentValidationValidator />

        @if(_isRepositoryLocked)
        {
            <Alert Color="AlertColor.Primary"> Currently it is not possible to set the game save as the latest, because the repository is locked. </Alert>
        }

        <div class="d-flex justify-content-center">
            @if(!_isRepositoryLocked)
            {
                <div class="content-width mt-3">
                    <h5>Latest Game Save</h5>
                    <div class="d-flex m-2 fs-5">
                        <div>
                            Set as latest <Help Text="By selecting this option to set the game save as the latest version, your current game save will be replaced with the downloaded version. Additionaly the remote repository will be locked requiring you to upload the newest Game Save back to the repository." />:
                        </div>
                        <div class="ms-2">
                            <InputCheckbox @bind-Value="_model.SetAsActiveGameSave" />
                        </div>
                    </div>
                </div>
            }
            <div class="content-width">
                &nbsp;
                @if (!_model.SetAsActiveGameSave || _isRepositoryLocked)
                {
                    <h5>Pick Destination folder for the Download</h5>
                    <div class="m-1 p-1">
                        <ItemPicker Title="Select the destination for the game save"
                                    Icon="IconName.PcDisplayHorizontal"
                                    IsRequired="true"
                                    SelectedFile="@_model.LocalGameSaveFile"
                                    OnPickerClicked="ShowLocalFolderPickerModal"
                                    OnPathCleared="ClearLocalGameSavePath"
                                    HelpText="Select the folder to which the version should be downloaded." />
                        <div class="ms-4">
                            <ValidationMessage For="() => _model" />
                                <ValidationSummary />
                        </div>
                    </div>
                }
            </div>
        </div>
        @if (_isDownloading)
        {
            <div class="text-center">
                <Spinner Size="SpinnerSize.Large" />
            </div>
        }

        <div class="d-flex justify-content-around mt-4">
            <Button Color="ButtonColor.Primary" Outline="true" Size="Size.Large" @onclick="HideModalAsync">Cancel</Button>
            <Button Color="ButtonColor.Primary" Size="Size.Large" Type="ButtonType.Submit" Disabled="_isDownloading">Download</Button>
        </div>
    </EditForm>
</div>
