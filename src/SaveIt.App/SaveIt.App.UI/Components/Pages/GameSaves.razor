@page "/game-saves"

<div class="d-flex m-3 justify-content-end">
    <Button Color="ButtonColor.Primary" Size="Size.Large" Class="p-2 ms-5" @onclick="() => ShowCreateGameSaveModalAsync(firstRender: true)">
        <Icon Name="IconName.PlusLg" /> Create new Game Save
    </Button>
</div>

<div class="mt-3">
    <Grid @ref="_grid"
        TItem="GameSaveViewModel"
        Class="table table-hover table-bordered table-striped"
        DataProvider="GameSavesDataProvider"
        AllowFiltering="true"
        Responsive="true"
        AllowPaging="true"
        AllowSorting="true">

        <GridColumn TItem="GameSaveViewModel" HeaderText="Game Save Name" PropertyName="Name" SortKeySelector="item => item.Name">
            @context.Name
            @if(context.GameSave.IsHosting)
            {
                <Badge Color="BadgeColor.Primary" VisuallyHiddenText="Currently hosting this game save" Class="ms-2">
                    <Icon CustomIconName="@CustomIcons.Hosting" Class="me-1"/>
                    Hosting
                </Badge>
            }
        </GridColumn>
        <GridColumn TItem="GameSaveViewModel" HeaderText="Game Name" PropertyName="GameName" SortKeySelector="item => item.GameName">
            @context.GameName
        </GridColumn>
        <GridColumn TItem="GameSaveViewModel" HeaderText="Actions" Filterable="false" FilterTextboxWidth="40">
            <Tooltip Title="Edit">
                <Icon CustomIconName="@CustomIcons.Edit"
                    Size="IconSize.x5"
                    Color="IconColor.Warning"
                    Class="p-1 clickable-icon"
                    @onclick="() => ShowEditGameSaveModalAsync(context.GameSave, true)" />
            </Tooltip>
            <Tooltip Title="Share">
                <Icon CustomIconName="@CustomIcons.ShareSolid"
                    Size="IconSize.x5"
                    Color="IconColor.Primary"
                    Class="p-1 clickable-icon"
                    @onclick="() => ShowShareGameSaveModalAsync(context.GameSave)" />
            </Tooltip>
            <Tooltip Title="Advanced Settings">
                <Icon CustomIconName="@CustomIcons.Settings"
                    Size="IconSize.x5"
                    Color="IconColor.Secondary"
                    Class="p-1 clickable-icon"
                    @onclick="() => ShowAdvancedGameSaveSettings(context.GameSave)" />
            </Tooltip>
            <Tooltip Title="Delete">
                <Icon CustomIconName="@CustomIcons.Delete"
                    Size="IconSize.x5"
                    Color="IconColor.Danger"
                    Class="p-1 clickable-icon"
                    @onclick="() => DeleteGameSaveAsync(context.GameSave)" />
            </Tooltip>
        </GridColumn>

    </Grid>
</div>

<Modal @ref="_createGameModal" Size="ModalSize.ExtraLarge" IsVerticallyCentered="true" />
<Modal @ref="_localItemPickerModal" Size="ModalSize.ExtraLarge" OnHidden="ShowModalAsync" IsVerticallyCentered="true" />
<Modal @ref="_remoteItemPickerModal" Size="ModalSize.ExtraLarge" OnHidden="ShowModalAsync" IsVerticallyCentered="true" />
<Modal @ref="_authorizeStorageModal" Size="ModalSize.Large" OnHidden="ShowModalAsync" IsVerticallyCentered="true" />
<Modal @ref="_createNewGameSaveModal" Size="ModalSize.ExtraLarge" OnHidden="ClearParameters" IsVerticallyCentered="true" />
<Modal @ref="_editGameSaveModal" Size="ModalSize.ExtraLarge" OnHidden="ClearParameters" IsVerticallyCentered="true" />
<Modal @ref="_shareGameSaveModal" Size="ModalSize.Large" IsVerticallyCentered="true" />
<ConfirmDialog @ref="_confirmDialog" />
