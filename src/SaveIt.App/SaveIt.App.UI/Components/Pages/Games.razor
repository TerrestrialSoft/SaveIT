@page "/"
@page "/games"
@using SaveIt.App.Domain.Repositories
@using SaveIt.App.Domain.Entities
@inject IGameRepository gameRepository

<div class="d-flex m-3 justify-content-center">
    <SearchBar OnSearch="UpdateGames" />
    <Button Color="ButtonColor.Primary" Size="Size.Large" Class="p-2 ms-5">
        <Icon Name="IconName.PlusLg" /> Create new Game
    </Button>
</div>

<div class="d-flex flex-wrap">
    @foreach (var game in _filteredGames)
    {
        if(game == _selectedGame)
        {
            <GameCard Game="game" ShowDetail="true" OnCardClicked="GameCardClicked" />
        }
        else
        {
            <GameCard Game="game" ShowDetail="false" OnCardClicked="GameCardClicked" />
        }
    }
</div>

@code
{
    private List<Game> _allGames = new();
    private List<Game> _filteredGames = new();
    private string _searchText = "";
    private Game? _selectedGame = null;

    protected override async Task OnInitializedAsync()
    {
        _allGames = (await gameRepository.GetAllGamesAsync()).ToList();
        _filteredGames = _allGames.ToList();
    }

    private void UpdateGames(string searchText)
    {
        _filteredGames = _allGames.Where(g => g.Name.Contains(searchText)).ToList();
    }

    private void GameCardClicked(Game g)
    {
        _selectedGame = g;
    }
}
