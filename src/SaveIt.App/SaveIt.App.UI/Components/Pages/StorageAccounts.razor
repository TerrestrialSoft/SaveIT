@page "/storage-accounts"

<div class="d-flex m-3 justify-content-end">
    <Button Color="ButtonColor.Primary" Size="Size.Large" Class="p-2 ms-5" @onclick="ShowAuthorizeStorageModalAsync">
        <Icon Name="IconName.PlusLg" /> Authorize new Storage Account
    </Button>
</div>

<div class="mt-3">
    <Grid @ref="_grid"
          TItem="StorageAccountModel"
          Class="table table-hover table-bordered table-striped"
          DataProvider="StorageAccountsDataProvider"
          AllowFiltering="true"
          Responsive="true"
          AllowPaging="true"
          AllowSorting="true">

        <GridColumn TItem="StorageAccountModel" HeaderText="Email" PropertyName="Email" SortKeySelector="x => x.Email">
            @context.Email
            
            @if(context.IsAuthorized)
            {
                <Badge Color="BadgeColor.Success" VisuallyHiddenText="Account is successfully authorized." Class="ms-2">Authorized</Badge>
            }
            else
            {
                <Badge Color="BadgeColor.Warning" VisuallyHiddenText="Account requires authorization." Class="ms-2">Unauthorized</Badge>
            }
        </GridColumn>
        <GridColumn TItem="StorageAccountModel" HeaderText="Actions" Filterable="false">
            @if(!context.IsAuthorized)
            {
                <Tooltip Title="Renew authorization">
                    <Icon CustomIconName="@CustomIcons.Refresh"
                          Size="IconSize.x5"
                          Color="IconColor.Warning"
                          Class="p-1"
                          @onclick="() => RenewAuthorizationAsync(context)" />
                </Tooltip>
            }

            @if(context.GameSavesCount == 0)
            {
                <Tooltip Title="Delete">
                    <Icon CustomIconName="@CustomIcons.Delete"
                          Size="IconSize.x5"
                          Color="IconColor.Danger"
                          Class="p-1"
                          @onclick="() => DeleteStorageAccountAsync(context)" />
                </Tooltip>
            }
        </GridColumn>

    </Grid>
</div>

<Modal @ref="_authorizeStorageModal" Size="ModalSize.Large" />
<ConfirmDialog @ref="_confirmDialog" />
