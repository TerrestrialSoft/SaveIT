@page "/storage-accounts"

<div class="d-flex m-3 justify-content-end">
    <Button Color="ButtonColor.Primary" Size="Size.Large" Class="p-2 ms-5" @onclick="ShowAuthorizeStorageModalAsync">
        <Icon Name="IconName.PlusLg" /> Authorize new Storage Account
    </Button>
</div>

<div class="mt-3">
    <Grid @ref="_grid"
          TItem="StorageAccountModel"
          Class="table table-hover table-bordered table-striped"
          DataProvider="StorageAccountsDataProvider"
          AllowFiltering="true"
          Responsive="true"
          AllowPaging="true" 
          AutoHidePaging="true"
          AllowSorting="true">

        <GridColumn TItem="StorageAccountModel" HeaderText="Email" PropertyName="Email" SortKeySelector="x => x.Email">
            @context.Email
            
            @if(context.IsAuthorized)
            {
                <Badge Color="BadgeColor.Success" VisuallyHiddenText="Account is successfully authorized." Class="ms-2">Authorized</Badge>
            }
            else
            {
                <Badge Color="BadgeColor.Warning" VisuallyHiddenText="Account requires authorization." Class="ms-2">Unauthorized</Badge>
            }
        </GridColumn>
        <GridColumn TItem="StorageAccountModel" HeaderText="Actions" Filterable="false">

                <Tooltip Title="@(!context.IsAuthorized ? "Renew authorization" : "Unable to renew an authorization because it is valid.")">
                    <Icon CustomIconName="@CustomIcons.Refresh"
                          Size="IconSize.x5"
                          Color="!context.IsAuthorized ? IconColor.Warning : IconColor.Secondary"
                          Class="p-1 clickable-icon"
                          @onclick="() => RenewAuthorizationAsync(context)" />
                </Tooltip>

            <Tooltip Title="@(context.GameSavesCount == 0 ? "Delete" : "Unable to delete Storage Account due to its assignment to a Game Save.")">
                <Icon CustomIconName="@CustomIcons.Delete"
                        Size="IconSize.x5"
                        Color="@(context.GameSavesCount == 0 ? IconColor.Danger : IconColor.Secondary)"
                        Class="p-1 clickable-icon"
                        @onclick="() => DeleteStorageAccountAsync(context)" />
            </Tooltip>
        </GridColumn>

    </Grid>
</div>

<Modal @ref="_authorizeStorageModal" Size="ModalSize.Large" />
<ConfirmDialog @ref="_confirmDialog" />
